(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{540:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[s._v("PHP-FPM是一个PHPFastCGI管理器，是只用于PHP的。"),a("br"),s._v("\nphp-fpm 已经在 Linux、MacOSX、Solaris 和 FreeBSD 上测试通过。"),a("br"),s._v("\n确信 libxml2（在某些系统上叫做libxml2-devel）已经安装。")])]),s._v(" "),a("h3",{attrs:{id:"关于信号处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于信号处理"}},[s._v("#")]),s._v(" 关于信号处理")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("SIGINT, SIGTERM")]),s._v(" "),a("th",[s._v("立刻终止")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("SIGQUIT")]),s._v(" "),a("td",[s._v("平滑终止")])]),s._v(" "),a("tr",[a("td",[s._v("SIGUSR1")]),s._v(" "),a("td",[s._v("重新打开日志文件")])]),s._v(" "),a("tr",[a("td",[s._v("SIGUSR2")]),s._v(" "),a("td",[s._v("平滑重载所有worker进程并重新载入配置和二进制模")])])])]),s._v(" "),a("h2",{attrs:{id:"参数调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数调优"}},[s._v("#")]),s._v(" 参数调优")]),s._v(" "),a("h3",{attrs:{id:"进程数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程数"}},[s._v("#")]),s._v(" 进程数")]),s._v(" "),a("ul",[a("li",[s._v("我们关注一个前提设置： pm = static/dynamic,标识fpm子进程的产生模式")]),s._v(" "),a("li",[s._v("static(静态) ：表示在fpm运行时直接fork出pm.max_chindren个worker进程")]),s._v(" "),a("li",[s._v("dynamic(动态)：表示运行时fork出start_servers个进程，随着负载的情况，动态的调整，最多不超过max_children个进程")])]),s._v(" "),a("blockquote",[a("p",[s._v("一般推荐用static，优点是不用动态的判断负载情况，提升性能，缺点是多占用些系统内存资源")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("static:worker进程")]),s._v(" "),a("th",[s._v("pm.max_children = 300")]),s._v(" "),a("th",[s._v("这个值原则上是越大越好")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("dynamic:worker进程")]),s._v(" "),a("td",[s._v("pm.start_servers = 20")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("dynamic:空闲状态")]),s._v(" "),a("td",[s._v("pm.min_spare_servers = 5")]),s._v(" "),a("td",[s._v("最小php-fpm进程数量")])]),s._v(" "),a("tr",[a("td",[s._v("dynamic:空闲状态")]),s._v(" "),a("td",[s._v("pm.max_spare_servers = 35")]),s._v(" "),a("td",[s._v("最大php-fpm进程数量")])])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("max_children")]),s._v(" "),a("ul",[a("li",[s._v("这个值原则上是越大越好，php-cgi的进程多了就会处理的很快，排队的请求就会很少。")]),s._v(" "),a("li",[s._v("设置”max_children”也需要根据服务器的性能进行设定")]),s._v(" "),a("li",[s._v("一般来说一台服务器正常情况下每一个php-cgi所耗费的内存在20M左右")]),s._v(" "),a("li",[s._v("假设“max_children”设置成100个，20M*100=2000M")]),s._v(" "),a("li",[s._v("也就是说在峰值的时候所有PHP-CGI所耗内存在2000M以内。")]),s._v(" "),a("li",[s._v("假设“max_children”设置的较小，比如5-10个，那么php-cgi就会“很累”，处理速度也很慢，等待的时间也较长。")]),s._v(" "),a("li",[s._v("如果长时间没有得到处理的请求就会出现504 Gateway Time-out这个错误，而正在处理的很累的那几个php-cgi如果遇到了问题就会出现502 Bad gateway这个错误。")])])]),s._v(" "),a("li",[a("p",[s._v("start_servers")]),s._v(" "),a("ul",[a("li",[s._v("pm.start_servers的默认值为2。并且php-fpm中给的计算方式也为： "),a("br"),s._v("{（cpu空闲时等待连接的php的最小子进程数） + （cpu空闲时等待连接的php的最大子进程数 - cpu空闲时等待连接的php的最小子进程数）/ 2}；")]),s._v(" "),a("li",[s._v("用配置表示就是：min_spare_servers + (max_spare_servers - min_spare_servers) / 2；")]),s._v(" "),a("li",[s._v("一般而言，设置成10-20之间的数据足够满足需求了")])])])]),s._v(" "),a("h3",{attrs:{id:"最大请求数max-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大请求数max-requests"}},[s._v("#")]),s._v(" 最大请求数max_requests")]),s._v(" "),a("blockquote",[a("p",[s._v("最大处理请求数是指一个php-fpm的worker进程在处理多少个请求后就终止掉，master进程会重新respawn一个新的。"),a("br"),s._v("\n这个配置的主要目的是避免php解释器或程序引用的第三方库造成的内存泄露。"),a("br"),s._v("\npm.max_requests = 10240")])]),s._v(" "),a("ul",[a("li",[s._v("当一个 PHP-CGI 进程处理的请求数累积到 max_requests 个后，自动重启该进程。")]),s._v(" "),a("li",[s._v("502，是后端 PHP-FPM 不可用造成的，间歇性的502一般认为是由于 PHP-FPM 进程重启造成的.")]),s._v(" "),a("li",[s._v("但是为什么要重启进程呢？")]),s._v(" "),a("li",[s._v("如果不定期重启 PHP-CGI 进程，势必造成内存使用量不断增长（比如第三方库有问题等）。因此 PHP-FPM 作为 PHP-CGI 的管理器，提供了这么一项监控功能，对请求达到指定次数的 PHP-CGI 进程进行重启，保证内存使用量不增长。")]),s._v(" "),a("li",[s._v("正是因为这个机制，在高并发中，经常导致 502 错误")]),s._v(" "),a("li",[s._v("目前我们解决方案是把这个值尽量设置大些，减少 PHP-CGI 重新 SPAWN 的次数，同时也能提高总体性能。PS：刚开始我们是500导致内存飙高，现在改成5120，当然可以再大一些，10240等，这个主要看测试结果，如果没有内存泄漏等问题，可以再大一些。")])]),s._v(" "),a("h3",{attrs:{id:"最长执行时间request-terminate-timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长执行时间request-terminate-timeout"}},[s._v("#")]),s._v(" 最长执行时间request_terminate_timeout")]),s._v(" "),a("p",[a("strong",[s._v("max_execution_time 和 request_terminate_timeout")])]),s._v(" "),a("blockquote",[a("p",[s._v("; The timeout for serving a single request after which the worker process will"),a("br"),s._v("\n; be killed. This option should be used when the ‘max_execution_time’ ini option"),a("br"),s._v("\n; does not stop script execution for some reason. A value of ‘0’ means ‘off’."),a("br"),s._v("\n; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)"),a("br"),s._v("\n; Default Value: 0"),a("br"),s._v("\n;request_terminate_timeout = 0"),a("br"),s._v("\n＝＝＝＝＝＝＝＝＝＝＝＝"),a("br"),s._v("\n设置单个请求的超时中止时间. 该选项可能会对php.ini设置中的’max_execution_time’因为某些特殊原因没有中止运行的脚本有用. 设置为 ‘0’ 表示 ‘Off’.当经常出现502错误时可以尝试更改此选项。")])]),s._v(" "),a("ul",[a("li",[s._v("这两项都是用来配置一个PHP脚本的最大执行时间的。当超过这个时间时，PHP-FPM不只会终止脚本的执行，还会终止执行脚本的Worker进程。")]),s._v(" "),a("li",[s._v("Nginx会发现与自己通信的连接断掉了，就会返回给客户端502错误。")])]),s._v(" "),a("h3",{attrs:{id:"内存-cpu排查方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存-cpu排查方法"}},[s._v("#")]),s._v(" 内存|CPU排查方法")]),s._v(" "),a("p",[a("strong",[s._v("top 命令格式：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("top [-] [d] [p] [q] [c] [C] [S]    [n] \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("参数说明：")]),s._v(" "),a("ul",[a("li",[s._v("d： 指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。")]),s._v(" "),a("li",[s._v("p： 通过指定监控进程ID来仅仅监控某个进程的状态。")]),s._v(" "),a("li",[s._v("q：该选项将使top没有任何延迟的进行刷新。如果调用程序有超级用户权限，那么top将以尽可能高的优先级运行。")]),s._v(" "),a("li",[s._v("S： 指定累计模式")]),s._v(" "),a("li",[s._v("s ： 使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。")]),s._v(" "),a("li",[s._v("i： 使top不显示任何闲置或者僵死进程。、")]),s._v(" "),a("li",[s._v("m：切换显示内存信息。")]),s._v(" "),a("li",[s._v("t：切换显示进程和CPU状态信息。")]),s._v(" "),a("li",[s._v("c：切换显示命令名称和完整命令行。")]),s._v(" "),a("li",[s._v("M： 根据驻留内存大小进行排序。")]),s._v(" "),a("li",[s._v("P：根据CPU使用百分比大小进行排序。")]),s._v(" "),a("li",[s._v("T：根据时间/累计时间进行排序。")])]),s._v(" "),a("p",[a("strong",[s._v("sar 执行sar -P ALL 1 100。-P ALL表示监控所有核心，1表示每1秒采集，100表示采集100次。")])]),s._v(" "),a("h3",{attrs:{id:"开启慢日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启慢日志"}},[s._v("#")]),s._v(" 开启慢日志")]),s._v(" "),a("p",[s._v("配置输出php-fpm慢日志，阀值为2秒：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("request_slowlog_timeout = 2\nslowlog = log/$pool.log.slow\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("利用sort/uniq命令分析汇总php-fpm慢日志：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("grep -v “^$” www.log.slow.tmp | cut -d ” ” -f 3,2 | sort | uniq -c | sort -k1,1nr | head -n 50\n\n参数解释：\nsort: 对单词进行排序\nuniq -c: 显示唯一的行，并在每行行首加上本行在文件中出现的次数\nsort -k1,1nr: 按照第一个字段，数值排序，且为逆序\nhead -10: 取前10行数据\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("用strace跟踪进程")]),s._v(" "),a("ul",[a("li",[s._v("利用nohup将strace转为后台执行，直到attach上的php-fpm进程死掉为止：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nohup strace -T -p 13167 > 13167-strace.log &\n\n参数说明:\n-c 统计每一系统调用的所执行的时间,次数和出错的次数等.\n-d 输出strace关于标准错误的调试信息.\n-f 跟踪由fork调用所产生的子进程.\n-o filename,则所有进程的跟踪结果输出到相应的filename\n-F 尝试跟踪vfork调用.在-f时,vfork不被跟踪.\n-h 输出简要的帮助信息.\n-i 输出系统调用的入口指针.\n-q 禁止输出关于脱离的消息.\n-r 打印出相对时间关于,,每一个系统调用.\n-t 在输出中的每一行前加上时间信息.\n-tt 在输出中的每一行前加上时间信息,微秒级.\n-ttt 微秒级输出,以秒了表示时间.\n-T 显示每一调用所耗的时间.\n-v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出.\n-V 输出strace的版本信息.\n-x 以十六进制形式输出非标准字符串\n-xx 所有字符串以十六进制形式输出.\n-a column\n设置返回值的输出位置.默认为40.\n-e execve 只记录 execve 这类系统调用\n-p 主进程号\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("也可以用利用-c参数让strace帮助汇总")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("strace -cp pid\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"php-fpm配置文件注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php-fpm配置文件注释"}},[s._v("#")]),s._v(" PHP-fpm配置文件注释")]),s._v(" "),a("h3",{attrs:{id:"全局配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[s._v("#")]),s._v(" 全局配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[global]\n; pid设置，默认在安装目录中的var/run/php-fpm.pid，建议开启\npid = /usr/local/php7/var/run/php-fpm.pid\n\n; 错误日志，默认在安装目录中的var/log/php-fpm.log\nerror_log = /user/local/nginx/logs/php-fpm.log\n\n; 错误级别. 可用级别为: alert（必须立即处理）, error（错误情况）, warning（警告情况）, notice（一般重要信息）, debug（调试信息）. 默认: notice.\nlog_level = notice\n\n; 表示在emergency_restart_interval所设值内出现SIGSEGV或者SIGBUS错误的php-cgi进程数如果超过 emergency_restart_threshold个，php-fpm就会优雅重启。这两个选项一般保持默认值。\nemergency_restart_threshold = 60\nemergency_restart_interval = 60s\n\n; 设置子进程接受主进程复用信号的超时时间. 可用单位: s(秒), m(分), h(小时), 或者 d(天) 默认单位: s(秒). 默认值: 0.\nprocess_control_timeout = 0\n\n; 后台执行fpm,默认值为yes，如果为了调试可以改为no。在FPM中，可以使用不同的设置来运行多个进程池。 这些设置可以针对每个进程池单独设置。\ndaemonize = yes\n\n; 包含其它子配置文件\ninclude=/usr/local/php7/etc/php-fpm.d/*.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"进程池配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程池配置"}},[s._v("#")]),s._v(" 进程池配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[www]\n; 启动进程的帐户和组\nuser = nginx\ngroup = nginx\n\n; fpm监听端口，即nginx中php处理的地址。可用格式为: 'ip:port', 'port', '/path/to/unix/socket'. 每个进程池都需要设置.\nlisten = /var/run/www/php-cgi.sock\n\n; backlog 数，-1表示无限制，由操作系统决定，此行注释掉就行\nlisten.backlog = -1\n\n; 允许访问FastCGI进程的IP，设置any为不限制IP，如果要设置其他主机的nginx也能访问这台FPM进程，\n; listen处要设置成本地可被访问的IP。默认值是any。\n; 每个地址是用逗号分隔. 如果没有设置或者为空，则允许任何服务器请求连接\nlisten.allowed_clients = 127.0.0.1\n\n; unix socket设置选项，如果使用tcp方式访问，这里注释即可\nlisten.owner = nginx\nlisten.group = nginx\nlisten.mode = 0666\n\n; 对于专用服务器，pm可以设置为static，选项有static和dynamic\npm = dynamic\n\n; 如果选择static，则由pm.max_children指定固定的子进程数\n;pm.max_children = 128;\n\n; 如果选择dynamic，则由下列参数决定\npm.max_children = 128 ; 子进程最大数\npm.start_servers = 16 ; 启动时的进程数\npm.min_spare_servers 8 ; 保证空闲进程数最小值，如果空闲进程小于此值，则创建新的子进程\npm.max_spare_servers 128 ; 保证空闲进程数最大值，如果空闲进程大于此值，此进行清理\n\n; 设置每个子进程重生之前服务的请求数. 对于可能存在内存泄漏的第三方模块来说是非常有用的. \n; 如果设置为 '0' 则一直接受请求. 等同于 PHP_FCGI_MAX_REQUESTS 环境变量. 默认值: 0\npm.max_requests = 1000\n\n; FPM状态页面的网址. 如果没有设置, 则无法访问状态页面. 默认值: none. munin监控会使用到\n; pm.status_path = /status\n\n; FPM监控页面的ping网址. 如果没有设置, 则无法访问ping页面. \n; 该页面用于外部检测FPM是否存活并且可以响应请求. 请注意必须以斜线开头 (/)。\n;ping.path = /ping\n\n; 用于定义ping请求的返回相应. 返回为 HTTP 200 的 text/plain 格式文本. 默认值: pong.\n;ping.response = pong\n\n; 设置单个请求的超时中止时间. 该选项可能会对php.ini设置中的'max_execution_time'因为某些特殊原因没有中止运行的脚本有用. 设置为 '0' 表示 'Off'.当经常出现502错误时可以尝试更改此选项。\nrequest_terminate_timeout = 0\n\n; 当一个请求该设置的超时时间后，就会将对应的PHP调用堆栈信息完整写入到慢日志中. 设置为 '0' 表示 'Off'\nrequest_slowlog_timeout = 10s\n\n; 慢请求的记录日志,配合request_slowlog_timeout使用\nslowlog = /user/local/nginx/logs/$pool.log.slow\n\n; 设置文件打开描述符的rlimit限制. 默认值: 系统定义值默认可打开句柄是1024，可使用 ulimit -n查看，ulimit -n 修改。\nrlimit_files = 65535\n\n; 设置核心rlimit最大限制值. 可用值: 'unlimited' 、0或者正整数. 默认值: 系统定义值.\nrlimit_core = 0\n\n; 启动时的Chroot目录. 所定义的目录需要是绝对路径. 如果没有设置, 则chroot不被使用.\n;chroot = \n\n; 设置启动目录，启动时会自动Chdir到该目录. 所定义的目录需要是绝对路径. 默认值: 当前目录，或者/目录（chroot时）\n;chdir =\n\n; 重定向运行过程中的stdout和stderr到主要的错误日志文件中. \n; 如果没有设置, stdout 和 stderr 将会根据FastCGI的规则被重定向到 /dev/null . 默认值: 空.\ncatch_workers_output = yes\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);